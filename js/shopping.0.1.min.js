productapiurl="https://us-central1.gcp.data.mongodb-api.com/app/ezali-pcrzc/endpoint/widget?count=4",redirectapiurl="https://us-central1.gcp.data.mongodb-api.com/app/ezali-pcrzc/endpoint/url";let widgetLoaded=!1;function createProductBlock(t){return`\n    <div class="group relative">\n    <div class="h-56 w-full overflow-hidden rounded-md bg-gray-200 group-hover:opacity-75 ">\n        <img src="${t.image}" alt="${t.name}" class="h-full w-full object-cover object-center">\n    </div>\n    <p class="mt-2 text-sm font-medium text-gray-900">$${t.price}</p>\n    <h3 class="mt-2 text-sm text-gray-700 text-left">\n        <button onclick="redirectToProduct('${t._id}')" class="text-left">\n        <span class="absolute inset-0"></span>\n        ${t.title}\n        </button>\n    </h3>\n    </div>\n`}async function fetchAndDisplayProducts(){try{const t=await fetch(productapiurl),e=await t.json();console.log(e);let n="";e.forEach((t=>{n+=createProductBlock(t)})),productContainer.innerHTML=`\n      <div class="">\n        <div class="mx-auto max-w-xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-3xl lg:px-8">\n          <div class="md:flex md:items-center md:justify-between">\n            <h2 class="text-2xl font-bold tracking-tight text-gray-900">Trending products</h2>\n            <a href="#" class="hidden text-sm font-medium text-indigo-600 hover:text-indigo-500 md:block">\n              Shop the collection\n              <span aria-hidden="true"> &rarr;</span>\n            </a>\n          </div>\n      \n          <div class="mt-6 grid grid-cols-2 gap-x-4 gap-y-10 sm:gap-x-6 md:grid-cols-4 md:gap-y-0 lg:gap-x-8">\n            ${n}\n          </div>\n      \n          <div class="mt-8 text-sm md:hidden">\n            <a href="#" class="font-medium text-indigo-600 hover:text-indigo-500">\n              Shop the collection\n              <span aria-hidden="true"> &rarr;</span>\n            </a>\n          </div>\n        </div>\n      </div>\n    `}catch(t){console.error("Error fetching products:",t)}}function loadWidgetIfVisible(t){document.getElementById("productcontainer");t[0].isIntersecting&&!widgetLoaded&&(fetchAndDisplayProducts(),widgetLoaded=!0)}const productContainer=document.getElementById("productcontainer"),observer=new IntersectionObserver(loadWidgetIfVisible,{root:null,rootMargin:"0px",threshold:.5});async function redirectToProduct(t){try{const e=`${redirectapiurl}?id=${t}`,n=await fetch(e),o=await n.json();o&&o.url?window.location.href=o.url:console.error("URL not found for product ID:",t)}catch(t){console.error("Error fetching product URL:",t)}}observer.observe(productContainer),document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM loaded! ðŸš€")}));